<ViewDataFormTemplateSpec 
    xmlns="bb_appfx_viewdataformtemplate"
    xmlns:c="bb_appfx_commontypes"
    ID="0ba66482-4e54-4f27-9d95-f41c16d9a24e"
    Name="Sustained Giving Summary View Data Form"
    Description="A data form for viewing sustained giving summary records"
    Author="Blackbaud Product Development"
    DataFormInstanceID="8a8ee963-080b-4036-80cb-674f604e7efa"
    c:SecurityUIFolder="Sustained Giving Dashboard"
    HasID="false"
    MartKey="BBDW"
    >

	<!-- define the SP that returns the data used by the form -->
	<SPDataForm SPName="USR_USP_DATAFORMTEMPLATE_VIEW_SUSTAINEDGIVINGSUMMARY" SPSchema="BBDW">
		<c:CreateProcedureSQL>
			<![CDATA[
create procedure BBDW.USR_USP_DATAFORMTEMPLATE_VIEW_SUSTAINEDGIVINGSUMMARY
(
  @STARTDATE datetime = null,
  @ENDDATE datetime = null,
	@DATALOADED bit = 0 output,
	@ACTIVEDONORS int = null output,
  @TOTALREVENUE money = null output,
  @NEWDONORS int = null output,
  @LOSTDONORS int = null output

)
as
	set nocount on;
	
	-- be sure to set this, in case the select returns no rows
	set @DATALOADED = 0;
	
select
  @ACTIVEDONORS = count (distinct ft.[CONSTITUENTDIMID]),
  @TOTALREVENUE = sum(ft.[AMOUNT])

from BBDW.[FACT_INSTALLMENTPAYMENT] ip
inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on ip.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
where (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)



select 
  @NEWDONORS = count(distinct [CONSTITUENTDIMID]) 
from
(select
  ft.[CONSTITUENTDIMID]
from BBDW.[FACT_INSTALLMENTPAYMENT] ip
inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on ip.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
where (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)

except

select
  ft.[CONSTITUENTDIMID]
from BBDW.[FACT_INSTALLMENTPAYMENT] ip
inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on ip.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
where (ft.[FINANCIALTRANSACTIONDATE] < @STARTDATE)
) as [NEWDONORS]

select 
  @DATALOADED = 1, 
  @LOSTDONORS = count(distinct [CONSTITUENTDIMID]) 
from
(
select
  ft.[CONSTITUENTDIMID]
from BBDW.[FACT_INSTALLMENTPAYMENT] ip
inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on ip.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
where (ft.[FINANCIALTRANSACTIONDATE] < @STARTDATE)

except

select
  ft.[CONSTITUENTDIMID]
from BBDW.[FACT_INSTALLMENTPAYMENT] ip
inner join BBDW.[FACT_FINANCIALTRANSACTION] ft on ip.[FINANCIALTRANSACTIONFACTID] = ft.[FINANCIALTRANSACTIONFACTID]
where (@STARTDATE is null or ft.[FINANCIALTRANSACTIONDATE] > @STARTDATE)
and (@ENDDATE is null or ft.[FINANCIALTRANSACTIONDATE] < @ENDDATE)

) as [LOSTDONORS]
	
	return 0;
			]]>
		</c:CreateProcedureSQL>
	</SPDataForm>

	<!-- describe fields on the form, which correspond to parameters on the SP.  Note that system paramters 
	like the context @ID, @DATALOADED, and @CURRENTAPPUSERID need not be listed. -->
	<FormMetaData xmlns="bb_appfx_commontypes">
		<FormFields>
			<FormField FieldID="ACTIVEDONORS" Caption="Active donors" DataType="Integer" />
			<FormField FieldID="TOTALREVENUE" Caption="Total revenue" DataType="Money" />
			<FormField FieldID="NEWDONORS" Caption="New donors" DataType="Integer" />
			<FormField FieldID="LOSTDONORS" Caption="Lost donors" DataType="Integer" />
		</FormFields>

    <WebUIComponent>
        <UIModel AssemblyName="Blackbaud.OpenFx.Reporting.UIModel.dll" ClassName="Blackbaud.OpenFx.Reporting.UIModel.SustainedGivingSummaryViewDataFormUIModel" />
        <WebUI>
            <ExternalResource Url="browser/htmlforms/custom/blackbaud.openfx.reporting/SustainedGivingSummaryViewDataForm.html" />
        </WebUI>
    </WebUIComponent>

    <UIFields>
      <FormField FieldID="STARTDATE" Caption="Start date" DataType="Date" />
      <FormField FieldID="ENDDATE" Caption="End date" DataType="Date" />
    </UIFields>
    
	</FormMetaData>

</ViewDataFormTemplateSpec>